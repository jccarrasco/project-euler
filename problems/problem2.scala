package problems

/*
 * Written by: Jose Carlos Carrasco Jimenez
 * Purpose: This is part of a series of problems found in project Euler. 
 * 			This is just the solution for problem #2 of the problems
 * 			found at http://projecteuler.net 
 */

object problem2 {
  
  def main(args: Array[String]) {
    println("Problem 2: " + sumEvenFibonacci(4000000))	//Euler project: problem 2
  }
  
  /*
   * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
   * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
   * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
   */
  def sumEvenFibonacci(max: Int) = {
    //generate fibonacci terms up to a maximum value (4,000,000)
    def fibTerms(first:Int, second:Int):Stream[Int] = {
    	first#::fibTerms(second, first + second)
    }
    
    fibTerms(1,2).takeWhile(n => n <= max).filter(n => n % 2 == 0).sum
  }

}